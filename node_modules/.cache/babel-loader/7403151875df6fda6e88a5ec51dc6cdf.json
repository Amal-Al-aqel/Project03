{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\96655\\\\OneDrive\\\\Desktop\\\\Tuwaiq\\\\React\\\\Project03\\\\src\\\\Wheel.js\",\n    _s = $RefreshSig$();\n\nimport { createEvent } from '@testing-library/dom';\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wheel(props) {\n  _s();\n\n  const colors = props.colors;\n  const sectors = props.itemsList.map(function (element, index) {\n    return {\n      label: element,\n      color: colors[index].hex.value\n    };\n  });\n  useEffect(() => {\n    const rand = (m, M) => Math.random() * (M - m) + m;\n\n    const tot = sectors.length;\n    const EL_spin = document.querySelector(\"#spin\");\n    const ctx = document.querySelector(\"#wheel\").getContext('2d');\n    const dia = ctx.canvas.width;\n    const rad = dia / 2;\n    const PI = Math.PI;\n    const TAU = 2 * PI;\n    const arc = TAU / sectors.length;\n    const friction = 0.991; // 0.995=soft, 0.99=mid, 0.98=hard\n\n    let angVel = 0; // Angular velocity\n\n    let ang = 0; // Angle in radians\n\n    const getIndex = () => Math.floor(tot - ang / TAU * tot) % tot;\n\n    function drawSector(sector, i) {\n      const ang = arc * i;\n      ctx.save(); // COLOR\n\n      ctx.beginPath();\n      ctx.fillStyle = sector.color;\n      ctx.moveTo(rad, rad);\n      ctx.arc(rad, rad, rad, ang, ang + arc);\n      ctx.lineTo(rad, rad);\n      ctx.fill(); // TEXT\n\n      ctx.translate(rad, rad);\n      ctx.rotate(ang + arc / 2);\n      ctx.textAlign = \"right\";\n      ctx.fillStyle = \"#fff\";\n      ctx.font = \"bold 20px sans-serif\";\n      ctx.fillText(sector.label, rad - 10, 10); //\n\n      ctx.restore();\n    }\n\n    ;\n\n    function rotate() {\n      const sector = sectors[getIndex()];\n      ctx.canvas.style.transform = `rotate(${ang - PI / 2}rad)`;\n      EL_spin.textContent = !angVel ? \"SPIN\" : sector.label;\n      EL_spin.style.background = sector.color;\n    }\n\n    function frame() {\n      if (!angVel) return;\n      angVel *= friction; // Decrement velocity by friction\n\n      if (angVel < 0.002) angVel = 0; // Bring to stop\n\n      ang += angVel; // Update angle\n\n      ang %= TAU; // Normalize angle\n\n      rotate();\n    }\n\n    function engine() {\n      frame();\n      requestAnimationFrame(engine);\n    }\n\n    sectors.forEach(drawSector);\n    rotate(); // Initial rotation\n\n    engine(); // Start engine\n\n    EL_spin.addEventListener(\"click\", () => {\n      if (!angVel) angVel = rand(0.25, 0.35);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"wheelOfFortune\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"wheel\",\n      width: \"400\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"spin\",\n      children: \"SPIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Wheel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Wheel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wheel\");","map":{"version":3,"sources":["C:/Users/96655/OneDrive/Desktop/Tuwaiq/React/Project03/src/Wheel.js"],"names":["createEvent","React","useEffect","Wheel","props","colors","sectors","itemsList","map","element","index","label","color","hex","value","rand","m","M","Math","random","tot","length","EL_spin","document","querySelector","ctx","getContext","dia","canvas","width","rad","PI","TAU","arc","friction","angVel","ang","getIndex","floor","drawSector","sector","i","save","beginPath","fillStyle","moveTo","lineTo","fill","translate","rotate","textAlign","font","fillText","restore","style","transform","textContent","background","frame","engine","requestAnimationFrame","forEach","addEventListener"],"mappings":"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","sourcesContent":["import { createEvent } from '@testing-library/dom';\r\nimport React, { useEffect } from 'react';\r\n\r\nexport default function Wheel(props) {\r\n    const colors = props.colors;\r\n    const sectors = props.itemsList.map(function (element, index) {\r\n        return { label: element, color: colors[index].hex.value }\r\n    });\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        const rand = (m, M) => Math.random() * (M - m) + m;\r\n        const tot = sectors.length;\r\n        const EL_spin = document.querySelector(\"#spin\");\r\n        const ctx = document.querySelector(\"#wheel\").getContext('2d');\r\n        const dia = ctx.canvas.width;\r\n        const rad = dia / 2;\r\n        const PI = Math.PI;\r\n        const TAU = 2 * PI;\r\n        const arc = TAU / sectors.length;\r\n\r\n        const friction = 0.991; // 0.995=soft, 0.99=mid, 0.98=hard\r\n        let angVel = 0; // Angular velocity\r\n        let ang = 0; // Angle in radians\r\n        const getIndex = () => Math.floor(tot - ang / TAU * tot) % tot;\r\n\r\n        function drawSector(sector, i) {\r\n            const ang = arc * i;\r\n            ctx.save();\r\n            // COLOR\r\n            ctx.beginPath();\r\n            ctx.fillStyle = sector.color;\r\n            ctx.moveTo(rad, rad);\r\n            ctx.arc(rad, rad, rad, ang, ang + arc);\r\n            ctx.lineTo(rad, rad);\r\n            ctx.fill();\r\n            // TEXT\r\n            ctx.translate(rad, rad);\r\n            ctx.rotate(ang + arc / 2);\r\n            ctx.textAlign = \"right\";\r\n            ctx.fillStyle = \"#fff\";\r\n            ctx.font = \"bold 20px sans-serif\";\r\n            ctx.fillText(sector.label, rad - 10, 10);\r\n            //\r\n            ctx.restore();\r\n        };\r\n    \r\n        function rotate() {\r\n            const sector = sectors[getIndex()];\r\n            ctx.canvas.style.transform = `rotate(${ang - PI / 2}rad)`;\r\n            EL_spin.textContent = !angVel ? \"SPIN\" : sector.label;\r\n            EL_spin.style.background = sector.color;\r\n        }\r\n    \r\n        function frame() {\r\n            if (!angVel) return;\r\n            angVel *= friction; // Decrement velocity by friction\r\n            if (angVel < 0.002) angVel = 0; // Bring to stop\r\n            ang += angVel; // Update angle\r\n            ang %= TAU; // Normalize angle\r\n            rotate();\r\n        }\r\n    \r\n        function engine() {\r\n            frame();\r\n            requestAnimationFrame(engine)\r\n        }\r\n    \r\n\r\n        sectors.forEach(drawSector);\r\n        rotate(); // Initial rotation\r\n        engine(); // Start engine\r\n        EL_spin.addEventListener(\"click\", () => {\r\n            if (!angVel) angVel = rand(0.25, 0.35);\r\n        });\r\n\r\n    }, [])\r\n    return (\r\n        <div id=\"wheelOfFortune\" >\r\n            <canvas id=\"wheel\" width=\"400\" height=\"400\"></canvas>\r\n            <div id=\"spin\">SPIN</div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}